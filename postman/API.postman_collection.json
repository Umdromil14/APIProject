{
	"info": {
		"_postman_id": "f83248c8-1c0d-44ce-ad33-a3d74ca13183",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31961271"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Post",
					"item": [
						{
							"name": "loginAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    console.log(pm.response)\r",
											"})\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"pm.collectionVariables.set('token', responseJson.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/login",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "postLoginWrongCredentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"lolilol\",\r\n    \"password\": \"password\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/login",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "createUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"ced\",\r\n    \"email\": \"ced@gmail.com\",\r\n    \"password\": \"cedP@ss1\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "postDuplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"ced17\",\r\n    \"email\": \"ced@gmail.com\",\r\n    \"password\": \"passCed1$\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidCreation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"coucou\",\r\n    \"password\": \"cou@pass2\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get",
					"item": [
						{
							"name": "getAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "getMe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/me",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllWithoutJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "wrongJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ERWSXTDCYFVUTGBY",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/me",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "userNotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user?id=1000",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user"
									],
									"query": [
										{
											"key": "id",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patch",
					"item": [
						{
							"name": "updateAccount1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Ben\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "badInput",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"coucou\": \"aller, salut\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "noJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"gg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "notFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"NotHere\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1000",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1000"
									]
								}
							},
							"response": []
						},
						{
							"name": "conflict",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "byebye",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/12",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "notACorrectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/EEEEEEEEEEEEEEEEEE",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"EEEEEEEEEEEEEEEEEE"
									]
								}
							},
							"response": []
						},
						{
							"name": "whereJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "dontDeleteBG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function(){\r",
											"    pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "myNameIsIdWrongId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/user/1000",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"user",
										"1000"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Game",
			"item": [
				{
					"name": "Post",
					"item": [
						{
							"name": "postGameToUserFromAdminSide",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function (){\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_id\": 1,\r\n    \"publication_id\": 1,\r\n    \"is_owned\": true,\r\n    \"review_rating\": 1,\r\n    \"review_comment\": \"Shitty game\",\r\n    \"review_date\": \"2020-12-31T23:00:00.000Z\"\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									]
								}
							},
							"response": []
						},
						{
							"name": "postBadGameUserSide",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function (){\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "postToUserBadPublicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_id\": 1,\r\n    \"publication_id\": 1000,\r\n    \"is_owned\": true\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									]
								}
							},
							"response": []
						},
						{
							"name": "postDuplicateGameFromUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function (){\r",
											"    pm.response.to.have.status(409);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"publication_id\": 1,\r\n    \"is_owned\": true\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/user",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get",
					"item": [
						{
							"name": "getAllGames",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									]
								}
							},
							"response": []
						},
						{
							"name": "getGameBadInput",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function (){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game?userId=3&publicationId=e",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									],
									"query": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "publicationId",
											"value": "e"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getGamesNoJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									]
								}
							},
							"response": []
						},
						{
							"name": "getNotExistingGame",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game?userId=1&publicationId=10",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game"
									],
									"query": [
										{
											"key": "userId",
											"value": "1"
										},
										{
											"key": "publicationId",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patch",
					"item": [
						{
							"name": "patchGame",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"review_rating\": 4\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidPatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "patchWithoutJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"review_rating\": 4\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "patchWrongPublicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"publication_id\": 1000\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "duplicatePatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"publication_id\": 2\r\n}"
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "deleteCompleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidInput",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/e",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"e"
									]
								}
							},
							"response": []
						},
						{
							"name": "noJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "notFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/game/3/1000",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"game",
										"3",
										"1000"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "platform",
			"item": [
				{
					"name": "get",
					"item": [
						{
							"name": "getPC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/?code=PC",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										""
									],
									"query": [
										{
											"key": "code",
											"value": "PC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"code PC should be correctly returned\",() => {\r",
											"    const codePC = [{\r",
											"        code : \"PC\",\r",
											"        description : \"PC (Windows)\",\r",
											"        abbreviation : \"PC\"\r",
											"    }];\r",
											"    //in a array bc can have all platform from the same function\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response).to.be.eql(codePC);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/?code=PC",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										""
									],
									"query": [
										{
											"key": "code",
											"value": "PC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "wrongPlatformCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjoxNCwidXNlcm5hbWUiOiJiYmJiIiwiZW1haWwiOiJwaWF0bWFuMjAxQGdtYWlsLmNvbSIsImhhc2hlZFBhc3N3b3JkIjoiJDJiJDEwJGZIVmtQVXhqR0lEczJ2cUlseFBmN09RLld0U1NnNWRMQ2pBOUtEaHkubW9USGl4bWRYU1NDIn0sImlhdCI6MTY5OTU2MjI3NCwiZXhwIjoxNjk5NjQ4Njc0fQ.H28umfH3-76vizvchvaP2oQkIfH60LOYQGL5wp1fUiA",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/platform/{{wrongCodePlatform}}",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"platform",
										"{{wrongCodePlatform}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "post",
					"item": [
						{
							"name": "postPlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//create a realPlatform with the right token\r",
											"pm.test(\"status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "gameBoy",
											"type": "text"
										},
										{
											"key": "description",
											"value": "gameBoy",
											"type": "text"
										},
										{
											"key": "abbreviation",
											"value": "gameBoy",
											"type": "text"
										},
										{
											"key": "picture",
											"type": "file",
											"src": "86198-full.png"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform"
									]
								}
							},
							"response": []
						},
						{
							"name": "postWithoutdescription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "code",
											"type": "text"
										},
										{
											"key": "abbreviation",
											"value": "abbreviation",
											"type": "text"
										},
										{
											"key": "picture",
											"type": "file",
											"src": "/C:/Users/cyril/Pictures/Screenshots/Capture d'écran 2023-10-27 190805.png"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform"
									]
								}
							},
							"response": []
						},
						{
							"name": "postWithoutCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "description",
											"type": "text"
										},
										{
											"key": "abbreviation",
											"value": "abbreviation",
											"type": "text"
										},
										{
											"key": "picture",
											"type": "file",
											"src": "/C:/Users/cyril/Pictures/Screenshots/Capture d'écran 2023-10-28 193402.png"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "patch",
					"item": [
						{
							"name": "patchPlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "portable",
											"type": "text"
										},
										{
											"key": "description",
											"value": "portable",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/MOB",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"MOB"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "renamePatchedPlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "MOB",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Mobile (Android/IOS)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/portable",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"portable"
									]
								}
							},
							"response": []
						},
						{
							"name": "patchPlatformWithCodeAlreadyExist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "ps4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/PS3",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"PS3"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "patchNonFoundPlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "code",
											"value": "nouveau code",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/PCM",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"PCM"
									],
									"query": [
										{
											"key": "code",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "deletePlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/GAMEBOY",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"GAMEBOY"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteNonFoundPlatform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/platform/PS17",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"platform",
										"PS17"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "publication",
			"item": [
				{
					"name": "get",
					"item": [
						{
							"name": "getPublication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePublicationbyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"publication 1 should be correctly returned\",() => {\r",
											"    const publication = [{\r",
											"        id: 1,\r",
											"        platform_code: \"PC\",\r",
											"        video_game_id: 1,\r",
											"        release_date: \"2020-11-12T23:00:00.000Z\",\r",
											"        release_price: \"69.99\",\r",
											"        store_page_url: \"https://www.activision.com/games/call-of-duty/call-of-duty-black-ops-cold-war\"\r",
											"    }];\r",
											"    //in a array bc can have all platform from the same function\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response).to.be.eql(publication);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/?publicationId=1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										""
									],
									"query": [
										{
											"key": "publicationId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePublicationByWrongId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/?publicationId=1745",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										""
									],
									"query": [
										{
											"key": "publicationId",
											"value": "1745"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePublicationByVideoGameid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/?videoGameId=4",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										""
									],
									"query": [
										{
											"key": "videoGameId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePublicationbyVideoGameName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"publication 1 should be correctly returned\",() => {\r",
											"    const publication = [{\r",
											"        id: 12,\r",
											"        platform_code: \"NSW\",\r",
											"        video_game_id: 3,\r",
											"        release_date: \"2017-03-02T23:00:00.000Z\",\r",
											"        release_price: \"59.99\",\r",
											"        store_page_url: \"https://www.nintendo.com/games/detail/the-legend-of-zelda-breath-of-the-wild-switch/\"\r",
											"    },{\r",
											"        id: 13,\r",
											"        platform_code: \"WIIU\",\r",
											"        video_game_id: 3,\r",
											"        release_date: \"2017-03-02T23:00:00.000Z\",\r",
											"        release_price: \"59.99\",\r",
											"        store_page_url: null\r",
											"    }];\r",
											"    //in a array bc can have all platform from the same function\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response).to.be.eql(publication);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/?videoGameName=zel",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										""
									],
									"query": [
										{
											"key": "videoGameName",
											"value": "zel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getOnePublicationbyplatformCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"publication 1 should be correctly returned\",() => {\r",
											"    const publication = [{\r",
											"        id: 13,\r",
											"        platform_code: \"WIIU\",\r",
											"        video_game_id: 3,\r",
											"        release_date: \"2017-03-02T23:00:00.000Z\",\r",
											"        release_price: \"59.99\",\r",
											"        store_page_url: null\r",
											"    },\r",
											"    {\r",
											"        id: 46,\r",
											"        platform_code: \"WIIU\",\r",
											"        video_game_id: 9,\r",
											"        release_date: \"2015-12-16T23:00:00.000Z\",\r",
											"        release_price: \"29.99\",\r",
											"        store_page_url: null\r",
											"    }];\r",
											"    //in a array bc can have all platform from the same function\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response).to.be.eql(publication);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/?platformCode=WIIU",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										""
									],
									"query": [
										{
											"key": "platformCode",
											"value": "WIIU"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "post",
					"item": [
						{
							"name": "postPubication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//create a realpublication with the right token\r",
											"pm.test(\"status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"WIIU\",\r\n    \"video_game_id\" : 100,\r\n    \"release_date\" : \"2023-11-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3001/{{version}}/publication/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"{{version}}",
										"publication",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "postPubicationWrongDateFormat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"WIIU\",\r\n    \"video_game_id\" : 2,\r\n    \"release_date\" : \"29-11-2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3001/{{version}}/publication",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						},
						{
							"name": "postPubicationWithoutALabel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"video_game_id\" : 100,\r\n    \"release_date\" : \"2023-11-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3001/{{version}}/publication",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						},
						{
							"name": "postPubicationWithoutBody",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						},
						{
							"name": "postPubicationWithCodeAlreadyPresent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"PC\",\r\n    \"video_game_id\" : 100,\r\n    \"release_date\" : \"2023-11-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						},
						{
							"name": "postPubicationWithCodeNotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//create with platform code or videoGame id doesn't exist\r",
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"WIIU2\",\r\n    \"video_game_id\" : 100,\r\n    \"release_date\" : \"2023-11-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "patch",
					"item": [
						{
							"name": "patchPublication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//patch a realpublication with the right token\r",
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"PSP\",\r\n    \"release_price\" : 19.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/101",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										"101"
									]
								}
							},
							"response": []
						},
						{
							"name": "patchPublicationWithCodeAlreadyPresent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//patch a publication with a code that already exist \r",
											"pm.test(\"status code is 409\", function(){\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"PS5\",\r\n    \"release_price\" : 19.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/113",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										"113"
									]
								}
							},
							"response": []
						},
						{
							"name": "patchPublicationNotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"platform_code\" : \"PSP\",\r\n    \"release_price\" : 19.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/5891",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										"5891"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "deletePublication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/3",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteNotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"//use a token invalid\r",
											"\r",
											"//use a non admin token\r",
											"\r",
											"//don't use token\r",
											"\r",
											"//delete a publication with a code that already exist \r",
											"\r",
											"\r",
											"//delete with string instead of a number and opposite\r",
											"\r",
											"//delete a non found publication\r",
											"\r",
											"\r",
											"//delete without some label\r",
											"\r",
											"\r",
											"//delete without body"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/publication/1204",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"publication",
										"1204"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "category",
			"item": [
				{
					"name": "get",
					"item": [
						{
							"name": "getAllCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "post",
					"item": [
						{
							"name": "postCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"video_game_id\": 1,\r\n    \"genre_id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "patch",
					"item": [
						{
							"name": "patchCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"video_game_id\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category/1/1",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category",
										"1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getPatchedCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category?genreId=1&videoGameId=2",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category"
									],
									"query": [
										{
											"key": "genreId",
											"value": "1"
										},
										{
											"key": "videoGameId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "deleteCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 204\", function(){\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category/1/2",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category",
										"1",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "getDeletedCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}:{{port}}/{{version}}/category?genreId=1&videoGameId=2",
									"host": [
										"{{url}}"
									],
									"port": "{{port}}",
									"path": [
										"{{version}}",
										"category"
									],
									"query": [
										{
											"key": "genreId",
											"value": "1"
										},
										{
											"key": "videoGameId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "inherit"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "wrongCodePlatform",
			"value": "?code=PC2",
			"type": "string",
			"disabled": true
		},
		{
			"key": "codePlatform",
			"value": "?code=PC",
			"type": "string",
			"disabled": true
		},
		{
			"key": "url",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "3001",
			"type": "string"
		},
		{
			"key": "version",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}